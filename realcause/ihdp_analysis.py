import numpy as np

"""
The IHDP dataset is saved in a .npz file and has 100 different realizations. When loaded it has the following keys:

- x (covariates): Shape: (672, 25, 100) - (number of samples/individuals per realization, number of features per individual, realizations)
- t (treatment): Shape: (672, 100) - (number of samples, realizations) binary
- yF (factual outcome): Shape (672, 100) continuous
- ycf (counterfactual outcome): Shape (672, 100) continuous, counterfactual if they had received the opposite treatment (because treatment is binary here)
- mu0 (noiseless potential outcome under control t=0): Shape (672, 100)
- mu1 (noiseless potential outcome under treatment t=1): Shape (672, 100)
- ate (average treatment effect): (4,) not sure why it's not (100,) but it's unused.

IHDP has 25 variables/covariates (6 continuous and 19 binary) + a treatment variable t + an outcome variable yF and ycf (depending on treatment).
Terminology note: noiseless = ground-truth, noisy = generated by generative model of realcause.
"""

data = np.load("datasets/ihdp_npci_1-100.test.npz")  # 75
data = np.load("datasets/ihdp_npci_1-100.train.npz")  # 672 (total of 747)
# Inspect keys
print(data.files)
# Print shapes of variables
print("x shape:", data["x"].shape)  # Covariates
print("t shape:", data["t"].shape)  # Treatment
print("yf shape:", data["yf"].shape)  # Factual outcomes
print("mu1 shape:", data["mu1"].shape)  # Potential outcomes (treatment)
print("mu0 shape:", data["mu0"].shape)  # Potential outcomes (control)
